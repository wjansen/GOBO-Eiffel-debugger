note

	description:
		"[ 
		 Class scanning the persistence closure of one object.
		 The items of the closure must be linearly arranged,
		 e.g., given by a previous serialization. 
		 ]"

class PC_SERIAL_DRIVER [TI_]
	-- TI_: type of idents generated by the `target' 
	-- NATURAL: type of idents generated by the `source' 

inherit

	PC_DRIVER [TI_, NATURAL]
		rename
			make as make_driver
		export {ANY}
			traverse
		redefine
			reset,
			known_objects,
			todo_count
		end
	
create

	make

feature {NONE} --
	
	make (t: like target; s: like source; order, opts: INTEGER)
		note
			action: ""
			t: "traversal target"
			s: "traversal source"
			opts: "options"
		require
			valid_flags: valid_flags (opts)
			when_target_expands_strings: t.must_expand_strings implies s.can_expand_strings
			when_source_expands_strings: s.must_expand_strings implies t.can_expand_strings
		local
			oo: like known_objects
			n: INTEGER
		do
			n := 100
			create oo.make (n)	
			make_driver (t, s, order, opts, oo)
		ensure
			taget_set: target = t
			source_set: source = s
		end

	reset
		do
			Precursor
			todo_count := 0
		end
	
feature -- Access

	valid_flags (f: INTEGER): BOOLEAN
		do
			Result := f & Forward_flag < Forward_flag
		end

	known_objects: PC_LINEAR_TABLE [PC_TYPED_IDENT [TI_]]
	
	todo_count: INTEGER

feature --- Status
	
	valid_target (t: like target): BOOLEAN
		do
			Result := True
		end
			
	valid_source (s: like source): BOOLEAN
		do
			Result := s.is_serial
		end
			
feature {NONE} -- Scanning structures 
	
	add_todo (si: NATURAL)
		do
			todo_count := todo_count + 1
		end
	
	remove_todo (si: NATURAL)
		do
			todo_count := todo_count - 1
		end

	move_to_next_ident
		do
			source.read_next_ident
			next_ident := source.last_ident
			source_root_ident := next_ident
		end
	
invariant
	
note

	author: "Wolfgang Jansen"
	date: "$Date$"
	revision: "$Revision$"

end
